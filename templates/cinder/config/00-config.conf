[DEFAULT]
transport_url = {{ .TransportURL }}
auth_strategy = keystone
# TODO: Decide if we want the operator to generate the api servers, which is
#       more efficient when creating volumes from image (no keystone requests).
#       For now rely on checking the catalog info
#       glance_api_servers=http://glanceapi.openstack.svc:9292/
glance_catalog_info = image:glance:internalURL
storage_availability_zone = nova
default_availability_zone = nova
# TODO: should we create our own default type?
#default_volume_type = openstack-k8s
scheduler_driver = cinder.scheduler.filter_scheduler.FilterScheduler

# Reduce to 30 seconds, from default's 60, the wait to receive 1 service
# capabilities report from a cinder volume service.  We keep it under the value
# of service_down_time (default 60) to ensure that the probes don't restart the
# scheduler.
scheduler_driver_init_wait_time = 30

# Workaround for https://bugs.launchpad.net/cinder/+bug/2026877
# Cinder backup will appear as down with concurrent backup/restore operations.
# Until bug is fixed we just increase the amount of time needed to report the
# service as being down.
service_down_time=180

# osapi_volume_listen=controller-0.internalapi.redhat.local
osapi_volume_workers = 4
control_exchange = openstack
api_paste_config = /etc/cinder/api-paste.ini

# For containers we want to log to stdout instead of the default stderr, as
# that would make cinder-api logs be treated as errors by httpd
{{ if (index . "LogPath") }}
log_file={{ .LogPath }}
{{ end }}

use_multipath_for_image_xfer = true

[backend_defaults]
use_multipath_for_image_xfer = true

[database]
connection = {{ .DatabaseConnection }}
max_retries = -1
db_max_retries = -1

[os_brick]
lock_path = /var/locks/openstack/os-brick

[oslo_concurrency]
lock_path = /var/locks/openstack/cinder

# TODO:
#[oslo_messaging_notifications]
#transport_url = rabbit://stackrabbit:secret@192.168.122.19:5672/
#driver = messagingv2

[oslo_messaging_rabbit]
heartbeat_timeout_threshold=60

[oslo_middleware]
enable_proxy_headers_parsing=True

[keystone_authtoken]
www_authenticate_uri={{ .KeystonePublicURL }}
auth_url = {{ .KeystoneInternalURL }}
# TODO (mschuppert): Add memcached
#memcached_servers = controller:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = {{ .ServiceUser }}
password = {{ .ServicePassword }}
#service_token_roles_required = true
interface = internal

[nova]
interface = internal
auth_type = password
auth_url = {{ .KeystoneInternalURL }}
username = {{ .ServiceUser }}
password = {{ .ServicePassword }}
user_domain_name = Default
project_name = service
project_domain_name = Default

[service_user]
send_service_user_token = True
auth_url = {{ .KeystoneInternalURL }}
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = {{ .ServiceUser }}
password = {{ .ServicePassword }}
